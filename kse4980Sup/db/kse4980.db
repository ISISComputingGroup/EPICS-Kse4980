record(bo, "$(P)SIM")
{
    field(SCAN, "Passive")
    field(DTYP, "Soft Channel")
    field(ZNAM, "NO")
    field(ONAM, "YES")
    field(VAL, "$(RECSIM=0)")
    field(PINI, "YES")
}

record(bo, "$(P)DISABLE")
{
    field(DESC, "Disable comms")
    field(PINI, "YES")
    field(VAL, "$(DISABLE=0)")
    field(OMSL, "supervisory")
    field(ZNAM, "COMMS ENABLED")
    field(ONAM, "COMMS DISABLED")
}

record(bo, "$(P)RESET")
{
    field(DESC, "Reset and initialise")
    field(DTYP, "stream")
    field(OUT, "@kse4980.proto reset $(PORT)")
}

record(bo, "$(P)INIT")
{
    field(DTYP, "stream")
    field(OUT, "@kse4980.proto init $(PORT)")
    field(PINI, "YES")
}

record(stringin, "$(P)ID") {
    field(DESC, "The device ID")
    field(DTYP, "stream")
    field(SDIS, "$(P):DISABLE")
    field(INP, "@kse4980.proto getIDN $(PORT)")
    field(SCAN, "Passive")
    field(PINI, "YES")
    field(SIML, "$(P):SIM")
    field(SIOL, "$(P):SIM:ID CP")
}

record(bo, "$(P)AUTORANGE:SP")
{
    field(DTYP, "stream")
    field(OUT, "@kse4980.proto setAutoRange($(P)) $(PORT)")
    field(ZNAM, "OFF")
    field(ONAM, "ON")
}

# TODO alias sp:rbv? 

record(bi, "$(P)AUTORANGE")
{
    field(DTYP, "stream")
    field(INP, "@kse4980.proto getAutoRange $(PORT)")
    field(SCAN, "1 second")
    field(ZNAM, "OFF")
    field(ONAM, "ON")
}

record(bi, "$(P)SIGNALTYPE")
{
    field(DTYP, "stream")
    field(SCAN, "1 second")
    field(ZNAM, "CURR")
    field(ONAM, "VOLT")
    field(INP, "@kse4980.proto getSignalType $(PORT)")
}

record(bo, "$(P)SIGNALTYPE:SP")
{
    field(DTYP, "stream")
    field(OUT, "@kse4980.proto setSignalTypeAndLevel($(P), $(P)SIGNALLEVEL:SP) $(PORT)")
    field(ZNAM, "CURR")
    field(ONAM, "VOLT")
}

record(ai, "$(P)SIGNALLEVEL")
{
    field(DTYP, "stream")
    field(SCAN, "1 second")
    field(INP, "@kse4980.proto getSignalLevel $(PORT)")
    field(PREC, "8")
}

record(ao, "$(P)SIGNALLEVEL:SP")
{
    field(FLNK, "$(P)SIGNALTYPE:SP.PROC")
    field(PREC, "8")
}

record(ao, "$(P)FREQ:SP")
{
    field(DESC, "Signal Frequency setpoint")
    field(OUT, "@kse4980.proto setSignalFreq($(P)) $(PORT)")
    field(DTYP, "stream")
    info(archive, "VAL")
    info(interest, "HIGH")
    field(EGU, "Hz")
}

record(ai, "$(P)FREQ")
{
    field(DESC, "Signal Frequency")
    field(INP, "@kse4980.proto getSignalFreq $(PORT)")
    field(DTYP, "stream")
    field(SCAN, "1 second")
    info(archive, "VAL")
    info(interest, "HIGH")
    field(EGU, "Hz")
}

record(mbbi, "$(P)IMPRANGE")
{
    field(DTYP, "stream")
    field(SCAN, "1 second")

    field(ZRST, "100m")
    field(ONST, "1")
    field(TWST, "10")
    field(THST, "100")
    field(FRST, "300")
    field(FVST, "1k")
    field(SXST, "3k")
    field(SVST, "10k")
    field(EIST, "30k")
    field(NIST, "100k")
    field(INP, "@kse4980.proto getManualImpRange $(PORT)")
}

record(mbbo, "$(P)IMPRANGE:SP")
{
    field(DTYP, "stream")

    field(ZRST, "100m")
    field(ONST, "1")
    field(TWST, "10")
    field(THST, "100")
    field(FRST, "300")
    field(FVST, "1k")
    field(SXST, "3k")
    field(SVST, "10k")
    field(EIST, "30k")
    field(NIST, "100k")
    field(OUT, "@kse4980.proto setManualImpRange($(P)) $(PORT)")
    field(FLNK, "$(P)AUTORANGE:SP")
}

record(mbbo, "$(P)MEAS_TIME:SP")
{
    field(DTYP, "stream")
    field(OUT, "@kse4980.proto setMeasurementTimeAndAveragingFactor($(P), $(P)AVG_FACTOR:SP) $(PORT)")
    field(ZRST, "SHOR")
    field(ONST, "MED")
    field(TWST, "LONG")
}
# TODO alias sp:rbv? 

record(mbbi, "$(P)MEAS_TIME")
{
    field(DTYP, "stream")
    field(SCAN, "1 second")
    field(INP, "@kse4980.proto getMeasurementTimeAndAveragingFactor($(P)AVG_FACTOR) $(PORT)")
    field(ZRST, "SHOR")
    field(ONST, "MED")
    field(TWST, "LONG")
}

record(longin, "$(P)AVG_FACTOR")
{
}

record(longout, "$(P)AVG_FACTOR:SP")
{
    field(FLNK, "$(P)MEAS_TIME:SP")
}


record(stringout, "$(P)FUNC:SP")
{
    field(DTYP, "stream")
    field(OUT, "@kse4980.proto setFunc($(P)) $(PORT)")
}
# TODO alias sp:rbv? 

record(stringin, "$(P)FUNC")
{
    field(DTYP, "stream")
    field(INP, "@kse4980.proto getFunc $(PORT)")
    field(SCAN, "1 second")
    field(FLNK, "$(P)_UNIT_WORKEROUTER.PROC")
}


# Work out the units of the two measurements given the current function 
record(aSub, "$(P)_UNIT_WORKEROUTER")
{
    field(INPA, "$(P)FUNC")
    field(FTA, "STRING")

    field(OUTA, "$(P)PRIMARY.EGU PP")
    field(FTVA, "STRING")

    field(OUTB, "$(P)SECONDARY.EGU PP")
    field(FTVB, "STRING")

    field(SNAM, "work_out_units")
}

record(ai, "$(P)PRIMARY")
{
    # TODO units forwardable
    field(DESC, "Primary reading")
    field(INP, "@kse4980.proto fetchReadings($(P)SECONDARY) $(PORT)")
    field(DTYP, "stream")
    field(SCAN, "1 second")
    info(archive, "VAL")
    info(interest, "HIGH")
    field(HIHI, "10000000")
}

record(ai, "$(P)SECONDARY")
{
    field(DESC, "Secondary reading")
    field(DTYP, "Soft Channel")
    info(archive, "VAL")
    info(interest, "HIGH")
    field(HIHI, "10000000")
}

record(longin, "$(P)ERRORID")
{
    field(DESC, "Numeric Err ID")
    field(SCAN, "1 second")
    field(DTYP, "Soft Channel")
    field(HIHI, "1")
}

record(stringin, "$(P)ERRORMSG")
{
    field(DESC, "Error message")
    field(SCAN, "1 second")
    field(DTYP, "Soft Channel")
}

